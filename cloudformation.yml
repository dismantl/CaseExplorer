AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  DatabasePassword:
    Type: String
    NoEcho: True
  DatabaseUsername:
    Type: String
    NoEcho: True
  AWSRegion:
    Description: AWS Region
    Type: String
    Default: us-east-1
  StaticStackName:
    Description: Name of the Case Harvester static stack, for getting subnet details
    Type: String
  DockerRepoName:
    Description: Name of docker repository
    Type: String

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub caseexplorer_cluster
  
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: caseexplorer_ecs_execution_role
      Description: IAM role used for executing ECS tasks and Cloudwatch rules
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Policies:
        - PolicyName: execution_role_policies
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: caseexplorer_task_role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
  
  DockerRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref DockerRepoName
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"

  CopCacherTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: caseexplorer_container
          Command:
            - flask
            - cache-cops
          Environment:
            - Name: MJCS_DATABASE_URL
              Value: !Sub
                - postgresql://${db_user}:${db_pw}@db.openjusticebaltimore.org/mjcs
                - db_user: !Ref DatabaseUsername
                  db_pw: !Ref DatabasePassword
          Image: !Sub
            - ${AWS::AccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/${repo_name}
            - repo_name: !Ref DockerRepo
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-region: !Ref AWSRegion
              awslogs-group: caseexplorer-cop-cacher
              awslogs-stream-prefix: caseexplorer-cop-cacher-logs
      RequiresCompatibilities:
        - FARGATE
      Cpu: 512
      Memory: 1024
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      NetworkMode: awsvpc
      TaskRoleArn: !GetAtt TaskRole.Arn
  
  CopCacherRule:
    Type: AWS::Events::Rule
    Properties:
      Name: cop_cacher_rule
      Description: Weekly cache cop-involved case numbers
      ScheduleExpression: cron(0 4 ? * 1 *)  # Sunday midnight ET
      Targets:
        - Id: cop_cacher_ecs_task_target
          Arn: !GetAtt ECSCluster.Arn
          RoleArn: !GetAtt ExecutionRole.Arn
          EcsParameters:
            LaunchType: FARGATE
            TaskDefinitionArn: !Ref CopCacherTask
            TaskCount: 1
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  - Fn::ImportValue: !Sub ${StaticStackName}-VPCDefaultSecurityGroupId
                Subnets:
                  - Fn::ImportValue: !Sub ${StaticStackName}-VPCPublicSubnet1Id
                  - Fn::ImportValue: !Sub ${StaticStackName}-VPCPublicSubnet2Id